{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Api/img-api.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","imgName","handleImgNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","props","formSubmit","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","onClick","children","ImageGalleryItem","largeImg","showModal","toggleModal","onImageClick","img","smallImg","largeImage","id","tags","src","alt","Button","api","fetchImages","currentPage","fetch","then","response","ok","json","Promise","reject","Error","LoaderSpinner","color","height","width","timeout","ImageGallery","images","error","status","onLoadMore","prevProps","prevState","ImagesAPI","prev","hits","length","scrollTo","top","documentElement","scrollHeight","behavior","catch","Loader","map","webformatURL","largeImageURL","App","handleFormSubmit","data","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.094b4465.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n         imgName: '',\r\n    }\r\n    \r\n    handleImgNameChange = e => {\r\n        this.setState({ imgName: e.currentTarget.value.toLowerCase() })\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.formSubmit(this.state.imgName);\r\n        this.setState({ imgName: '' });\r\n    };\r\n\r\n    render() { \r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={this.state.imgName}\r\n                        onChange={this.handleImgNameChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Searchbar;\r\n\r\n\r\n\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('Modal componentDidUpdate');\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n    render() {\r\n        return createPortal(\r\n           \r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">               \r\n                    {this.props.children}\r\n                </div>\r\n            </div>,\r\n            modalRoot,              \r\n            )        \r\n    }\r\n}\r\n\r\nexport default Modal;","import { Component } from 'react';\r\n\r\nimport Modal from '../Modal';\r\n\r\n class ImageGalleryItem extends Component {\r\n  state = {\r\n    largeImg: '',\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  onImageClick = img => {\r\n    this.setState({ largeImg: img });\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { smallImg, largeImage, id, tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <li\r\n          className=\"ImageGalleryItem\"\r\n                key={id}\r\n                id={id}\r\n          onClick={() => this.onImageClick(largeImage)}\r\n        >\r\n          <img\r\n            src={smallImg}\r\n            alt={tags}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <img src={this.state.largeImg} alt=\"\" />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ImageGalleryItem;","const Button = ({ onClick }) => {\r\n  return (\r\n    <button onClick={onClick} type=\"button\" className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","  \r\nfunction fetchImages(imgName, currentPage) {\r\n    const BASE_URL = \"https://pixabay.com/api/\";\r\n    const KEY = \"21948624-31b67ed2e94e468d71d1f3d1d\";\r\n    \r\n    return fetch(\r\n        `${BASE_URL}?q=${imgName}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n        .then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`No image with name ${imgName}`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n class LoaderSpinner extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n        className=\"LoaderSpinner\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoaderSpinner;","import { Component } from \"react\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport Button from '../Button';\r\nimport ImagesAPI from '../Api/img-api';\r\nimport LoaderSpinner from \"../Loader\";\r\n\r\nclass ImageGallery extends Component {\r\n    state = {\r\n        currentPage: 1,\r\n        images: [],\r\n        error: '',\r\n        status: 'idle',\r\n    };\r\n\r\n    componentDidMount() {\r\n    this.setState({currentPage: 1});\r\n  }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const {imgName }= this.props;\r\n        const { currentPage } = this.state;\r\n        \r\n        if (prevProps.imgName !== imgName) {\r\n            this.setState({\r\n                currentPage: 1,\r\n                images: [],\r\n            });\r\n        }\r\n\r\n        if ((prevProps.imgName !== imgName && currentPage === 1) ||\r\n        prevState.currentPage !== currentPage) {\r\n            this.setState({ status: 'pending' });            \r\n\r\n            ImagesAPI.fetchImages(imgName, currentPage)\r\n                .then(response => {\r\n                    this.setState(prev => ({\r\n                        images: [...prev.images, ...response.hits],\r\n                        status: 'resolved',\r\n                    }));\r\n                    if (response.hits.length === 0) {\r\n                        this.setState({\r\n                            error: 'По вашему запросу ничего не найдено.',\r\n                            status: 'rajected',\r\n                        });\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    window.scrollTo({\r\n                        top: document.documentElement.scrollHeight,\r\n                        behavior: 'smooth',\r\n                    })\r\n                 })\r\n                .catch(error => this.setState({ error }));             \r\n        }\r\n    }\r\n    \r\n\r\n    onLoadMore = () => {\r\n    this.setState({ currentPage: this.state.currentPage + 1 });\r\n    };\r\n\r\n    render() {        \r\n        const { images, error, status } = this.state;\r\n\r\n        if (status === 'idle') {\r\n            return (<div className=\"Status\" >Введите запрос в поле поиска</div>);\r\n        }\r\n\r\n        if (status === 'pending') {\r\n            return (\r\n                <div> <LoaderSpinner />  </div>\r\n            );\r\n        }\r\n\r\n        if (status === 'rajected') {\r\n            return <div className=\"Status-error\">{error}</div>;       \r\n            };\r\n        \r\n        if (status === 'resolved') {\r\n            return (\r\n            <>\r\n                <ul className=\"ImageGallery\">\r\n                    {images.map(img => (\r\n                        <ImageGalleryItem\r\n                            key={img.webformatURL}\r\n                            smallImg={img.webformatURL}\r\n                            largeImage={img.largeImageURL}\r\n                            id={img.id}\r\n                            tags={img.tags}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n                    {images.length > 0 && <Button onClick={this.onLoadMore} />}\r\n            </>\r\n            );\r\n        }\r\n    }\r\n}\r\n    export default ImageGallery;","import { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nimport './styles.css';\n\nclass App extends Component {\n  state = {\n    imgName: '',\n  }\n\n  handleFormSubmit = data => {\n    this.setState({ imgName: data });\n  };\n  \n  render() {\n    \n    return (\n      <div className=\"App\">\n        <Searchbar formSubmit={this.handleFormSubmit} />\n        <ImageGallery imgName={this.state.imgName} />\n      </div>\n    );\n  }\n}\n \nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}